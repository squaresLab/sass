# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = 				simple.params

generations =				1000
quit-on-run-complete =			true
eval =					ec.coevolve.MultiPopCoevolutionaryEvaluator

eval.num-current = 4
eval.select-current = ec.select.RandomSelection

eval.subpop.0.select-current = ec.select.RandomSelection
eval.subpop.1.select-current = ec.select.RandomSelection

pop = 					ec.Population
pop.subpops =				2
pop.subpop.0 = 				ec.Subpopulation
pop.subpop.0.size =			31
pop.subpop.0.duplicate-retries =	2
pop.subpop.0.species =                  ec.vector.IntegerVectorSpecies
pop.subpop.0.species.genome-size = 	50
pop.subpop.0.species.chunk-size =	1
pop.subpop.0.species.pipe = 		ec.breed.ForceBreedingPipeline
pop.subpop.0.species.pipe.num-inds = 	2
pop.subpop.0.species.pipe.source.0 = 	ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0.source.0 =			ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0.source.0 = 		ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.0.source.0.size = 	3
pop.subpop.0.species.pipe.source.0.source.0.source.1 = 	  	same
pop.subpop.0.species.pipe.source.0.source.0.source.1.size = 	3

pop.subpop.0.species.fitness =		ec.simple.SimpleFitness
pop.subpop.0.species.ind =		ec.vector.IntegerVectorIndividual
pop.subpop.0.species.mutation-prob = 	0.01
pop.subpop.0.species.crossover-type = 	one
pop.subpop.0.species.mutation-type =	reset

pop.subpop.1 = 				ec.Subpopulation
pop.subpop.1.size =			31
pop.subpop.1.duplicate-retries =	2
pop.subpop.1.species =                  ec.vector.IntegerVectorSpecies
pop.subpop.1.species.genome-size = 	50
pop.subpop.1.species.chunk-size =	1
pop.subpop.1.species.pipe = 		ec.breed.ForceBreedingPipeline
pop.subpop.1.species.pipe.num-inds = 	2
pop.subpop.1.species.pipe.source.0 = 	ec.vector.breed.VectorMutationPipeline
pop.subpop.1.species.pipe.source.0.source.0 =			ec.vector.breed.VectorCrossoverPipeline
pop.subpop.1.species.pipe.source.0.source.0.source.0 = 		ec.select.TournamentSelection
pop.subpop.1.species.pipe.source.0.source.0.source.0.size = 	3
pop.subpop.1.species.pipe.source.0.source.0.source.1 = 	  	same
pop.subpop.1.species.pipe.source.0.source.0.source.1.size = 	3

pop.subpop.1.species.fitness =		ec.simple.SimpleFitness
pop.subpop.1.species.ind =		ec.vector.IntegerVectorIndividual
pop.subpop.1.species.mutation-prob = 	0.01
pop.subpop.1.species.crossover-type = 	one
pop.subpop.1.species.mutation-type =	reset

stat.file				$out.stat

select.tournament.size = 2

eval.problem =				ecj.BullseyeProblem
eval.problem.hist-size =		1

# start params added due to errors
eval.num-elites=1
eval.num-shuffled=1
eval.num-prev=0

eval.select-prev=ec.select.TournamentSelection

#vector.species.max-gene=10
pop.subpop.0.species.max-gene = 7
pop.subpop.1.species.max-gene = 10
vector.species.min-gene=0
# end added params

stat.child.0.hist-size =		1
stat.child.0.file =			compete.stat

stat =					ec.simple.SimpleStatistics
stat.num-children =			0

breed.elite.0 =				1

# for single elimination tournament
#eval.style =				single-elim-tournament

# for round robin
#eval.style =				round-robin

# for random one way tournament
eval.style =				rand-1-way
eval.group-size =			7

# for random two way tournament
#eval.style =				rand-2-way
#eval.group-size =			7

